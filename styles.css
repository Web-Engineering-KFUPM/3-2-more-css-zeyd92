/* More CSS.
   Tip: Use the README for guidance.
*/


/* TODO 1:
  - Define CSS variables on :root for brand colors.
  - Apply a global box-sizing reset using the universal selector (hint use * selector).
*/

:root {
  --brand: hsl(221 83% 53%);
  --muted: #6b7280;
  --bg: #f6f7fb;
  --card: #ffffff;
}

* {
  box-sizing: border-box;
}

/* TODO 2:
   -Give .site-header & .site-footer a subtle background using var(--card)
   -Make the .tagline class a bit muted (use var(--muted))
   -Add a soft box-shadow to .card class
*/

.site-header, .site-footer {
  text-align: center;
  padding: 1.25rem;
  background: var(--card);
}

.tagline {
  color: var(--muted);
}

.card{
  background: var(--card);
  border: 1px solid rgba(0,0,0,0.06);
  border-radius: 12px;
  padding: 1rem 1.25rem;
  margin-block: 1rem;
  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.06);
}

/* TODO 3:
   - Set the color to the brand variable and make the text bold for the .color-demo .color-note class.
   - Set the color to var(--muted) and the font size to 0.95rem for the .color-demo .muted class.
   - Create a 100% width block with a minimum height of 80px, a background color of your choice, and an optional background gradient for the .bg-sample class.
*/

.color-demo .color-note {
  color: var(--brand);
  font-weight: 700;
}

.color-demo .muted {
  color: var(--muted);
  font-size: 0.95rem;
}

.bg-sample {
  width: 100%;
  min-height: 80px;
  background: linear-gradient(135deg, hsl(221 83% 96%), hsl(221 83% 92%));
  border: 1px solid rgba(0,0,0,0.06);
  border-radius: 10px;
  display: grid;
  place-items: center;
  color: #374151;
}

/* TODO 4:
   - For the .inline-label class: make it behave like an inline-block element with small padding and a border.
   - For the .inline-label.alt class: ensure it stays inline with others but use a different border style.
*/

.inline-label {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  border: 1px solid rgba(0,0,0,0.15);
  border-radius: 6px;
  margin-right: 0.25rem;
}

.inline-lable.alt {
  display: inline-block;
  padding: 0.25rem 0.5rem;
  border: 1px dashed rgba(0,0,0,0.25);
  border-radius: 6px;
}

/* TODO 5:
   - For the .copy .title class: choose a font-size (use rem), a font-weight between 600â€“700, 
     and apply text-transform: capitalize.
   - For the .copy .intro class: set the font-style to italic and slightly increase the line-height.
   - For the .copy .sample-text class: define a font-family stack (include a serif fallback) 
     and use relative sizing with em (e.g., 1.1em).
   - For the .cta-link class: remove the underline, set the color to the brand variable, 
     and add a hover style (underline + darker color using rgb/hex/hsl).
*/
.copy .title {
  
  font-size: 1.5rem;
  font-weight: 700;
  text-transform: capitalize;
  margin: 0.5rem 0;
}

.copy .intro {
  
  font-style: italic;
  line-height: 1.7;
  color: #334155;
}

.copy .sample-text {
  
  font-family: serif;
  font-size: 1.1em;
  color: #1f2937;
}

.cta-link {
  
  text-decoration: none;
  color: var(--brand);
  font-weight: 600;
}

.cta-link:hover{
  text-decoration: underline;
  color: hsl(221 83% 40%);
}

/* TODO 6:
   - For the .box class: set a fixed width (e.g., 120px) and height (e.g., 80px), 
     add padding and a visible border.
   - For the .box class: round the corners slightly and center the text inside 
     (hint: use flexbox).
   - For the .b1 class: apply a unique background or border style.
   - For the .b2 class: apply a unique background or border style.
   - For the .b3 class: apply a unique background or border style.
*/

.box {
  width: 120px;
  height: 80px;
  padding: 0.75rem;
  border: 2px solid #e5e7eb;
  border-radius: 10px;
  display: flex; 
  align-items: center; 
  justify-content: center;
  background: #fafafa;
  font-weight:600;
}

.b1 {
  background: #e0f2fe;
  border-color: #93c5fd;
}

.b2 {
  background: #dcfce7;
  background-color: #86efac;
}

.b3 {
  background: #fee2e2;
  background-color: #fca5a5;
}

/* TODO 7:
   - For the .toolbar class: make it a flex container, distribute items with space-between, 
     align them vertically in the center, and add a gap.
   - For the .btn class: add padding, remove the default border, and provide hover feedback.
   - For the .product-grid class: create a responsive flex grid by setting display:flex, 
     wrapping items, adding a gap, and ensuring items are at least 140px wide 
     using flex-basis or min().
   - For the .product-grid .item class: center the content, set a minimum height, 
     and apply a soft background.
*/

.toolbar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  gap: 0.5rem;
  padding: 0.5rem;
  border: 1px dashed rgba(0, 0, 0, 0.1);
}

.btn:hover {
  background: #e0e7ff;
}

.product-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 0.75;
  margin-top: 0.75rem;
}

.product-grid .item {
  flex: 1 1 140rem;
  display: grid;
  place-items: center;
  min-height: 80px;
  background: #f3f4f6;
  border:1px solid #e5e7eb;
  border-radius:10px;
}

/* TODO 8:
   - For the .static-box class: keep the default document flow but style it for visibility.
   - For the .relative-box class: use position: relative and nudge it 10px down and 10px right.
   - For the .absolute-parent class: set position: relative and add background and padding.
   - For the .absolute-child class: set position: absolute and place it in the top-right corner of the parent.
   - For the .fixed-badge class: set position: fixed, pin it to the bottom-right of the viewport, 
     and add small padding, a background, and rounded corners.
   - For the .stack class: create two overlapping squares and control their stacking order using z-index.
   - For the .stack.a class: apply a background color and set a lower z-index.
   - For the .stack.b class: offset it slightly, apply a different background color, and set a higher z-index.
*/

.static-box {
  background: #f3f4f6;
  border:1px solid #e5e7eb;
  border-radius:8px;
  padding:0.5rem 0.75rem;
  display: inline-block;
}

.relative-box {
  position: relative;
  top: 10px;
  left: 10px;
  background: #eef2ff;
  border: 1px solid #c7d2fe;
  border-radius: 8px;
  padding: 0.5rem 0.75rem;
  display: inline-block;
  margin-left: 0.5rem;
}

.absolute-parent {
  
  position: relative;
  display: inline-block;
  margin-left: 0.5rem;
  padding: 1.25rem 1.5rem;
  background: #ecfeff;
  border: 1px solid #a5f3fc;
  border-radius: 10px;
}
.absolute-child {
  
  position: absolute;
  top: -10px;
  right: -10px;
  background: #cffafe;
  border: 1px solid #67e8f9;
  padding: 0.35rem 0.5rem;
  border-radius: 999px;
  font-size: 0.85rem;
}

.fixed-badge {
  
  position: fixed;
  right: 16px; bottom:16px;
  background: #fde68a;
  border: 1px solid #fcd34d;
  border-radius: 999px;
  padding: 0.4rem 0.7rem;
  font-weight: 700;
  box-shadow: 0 4px 12px rgba(0,0,0,0.12);
}

.stack {
  
  position: absolute;
  width: 60px; 
  height: 60px;
  top: 70px; 
  left: 60px;
  border-radius: 8px;
}
.stack.a { 
  
  background: #34d399;
  z-index: 1;
}

.stack.b { 
  
  background: #f59e0b;
  top: 85px;
  left: 75px;
  z-index: 2;
}

html,
body {
  margin: 0;
  padding: 0;
  font-family: system-ui, -apple-system, "Segoe UI", Roboto, Arial, sans-serif;
  line-height: 1.5;
  background: var(--bg);
  color: #111827;
}

.site-header,
.site-footer {
  text-align: center;
  padding: 1.25rem;
}

.container {
  max-width: 900px;
  margin: 0 auto;
  padding: 1rem;
}

.card {
  background: var(--card);
  border: 1px solid rgba(0, 0, 0, 0.06);
  border-radius: 12px;
  padding: 1rem 1.25rem;
  margin-block: 1rem;
}

.box-row {
  display: flex;
  gap: 1rem;
}

.toolbar {
  padding: 0.5rem;
  border: 1px dashed rgba(0, 0, 0, 0.1);
}

.position-stage {
  position: relative;
  padding: 2rem;
  min-height: 260px;
  border: 1px solid rgba(0, 0, 0, 0.08);
  overflow: hidden;
}